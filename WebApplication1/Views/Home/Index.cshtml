@model IEnumerable<WebApplication1.Models.Book>

@{
    ViewData["Title"] = "Book List";
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f4f4f9;
    }

    .container {
        padding-top: 2rem;
    }

    h2 {
        color: #4a5568;
    }

    .fade-in {
        opacity: 0;
        transform: translateY(30px);
        animation: fadeInUp 0.6s ease forwards;
    }

    .book-card {
        background-color: #ffffff;
        border-radius: 0.5rem;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
        opacity: 0;
        transform: translateY(30px);
    }

        .book-card:hover {
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            transform: translateY(-5px);
        }

    .book-title {
        color: #2d3748;
    }

    .book-author {
        color: #718096;
    }

    .btn-borrow {
        background-color: #3182ce;
        color: white;
        transition: background-color 0.3s ease;
    }

        .btn-borrow:hover {
            background-color: #2b6cb0;
        }

    .book-icon {
        width: 120px;
        height: 160px;
        margin-bottom: 10px;
        object-fit: contain;
    }

    #toast {
        position: fixed;
        bottom: 1rem;
        right: 1rem;
        background-color: #38a169;
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        opacity: 0;
        transform: translateX(100%);
        transition: transform 0.5s ease, opacity 0.5s ease;
    }

        #toast.show {
            opacity: 1;
            transform: translateX(0);
        }
</style>

<div class="container mx-auto">
    <h2 class="text-3xl font-bold mb-6 text-center">Available Books</h2>

    <div class="flex justify-center mb-6">
        @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin"))
        {
            <a href="/Home/UserBorrowList" class="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded">
                View Your Borrowed Books
            </a>

        }
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        @foreach (var book in Model)
        {
            <div class="book-card p-6 shadow-md fade-in">
                <img src="https://i.ibb.co/DCqSdXd/5402751.png" alt="Book Icon" class="book-icon mx-auto" />

                <h3 class="text-xl font-bold book-title text-center">@book.Title</h3>
                <p class="text-sm book-author text-center">Author: @book.Author.Name</p>

                <form asp-action="BorrowBook" method="post" onsubmit="showToast(); delaySubmit(this); return false;">
                    <input type="hidden" name="bookId" value="@book.BookId" />
                    <button type="submit" class="btn-borrow mt-4 py-2 px-4 rounded-md block mx-auto">
                        Borrow
                    </button>
                </form>
            </div>
        }
    </div>
</div>

<div id="toast">
    <span class="font-bold">Success!</span> Book borrowed successfully!
</div>

<script>
    function showToast() {
        var toast = document.getElementById("toast");
        toast.classList.add("show");
        setTimeout(function () {
            toast.classList.remove("show");
        }, 3500);
    }

    function delaySubmit(form) {
        setTimeout(function () {
            form.submit();
        }, 1400);
    }

    window.onload = function () {
        var bookCards = document.querySelectorAll('.book-card');
        bookCards.forEach((card, index) => {
            setTimeout(() => {
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 150);
        });
    };
</script>
